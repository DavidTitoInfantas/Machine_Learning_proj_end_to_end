name: ML Pipeline CI

# Trigger the workflow on any push to the main branch or pull request
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    # Optionally, you can also trigger the workflow manually
    workflow_dispatch:


# Permissions for the workflow      
permissions: write-all
jobs:

    Linting:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Check out the code from the repository
            - name: Check out code
              uses: actions/checkout@v2
            
            # Step 2: Set up Python environment
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.11'
            
            # Step 3: Execute docstring tests
            - name: Check docstrings
              run: make eval_docstyle  
            
    test:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Check out the code from the repository
            - name: Check out code
              uses: actions/checkout@v2
            
            # Step 2: Set up Python environment
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.11'
            
            # Step 3: Install dependencies
            - name: Install dependencies
              run: make install_tests

            # Steps 4: Run tests
            - name: Run tests
              if: ${{ success() }}
              run: make tests

            # Step 5: Upload coverage report
            - name: Upload coverage report
              if: ${{ success() }}
              run: make save_tests_report
    
    build:
        runs-on: ubuntu-latest

        steps:
          # Step 1: Check out the code from the repository
          - name: Check out code
            uses: actions/checkout@v3

          # Step 2: Set up CML
          - name: Set up CML
            uses: iterative/setup-cml@v2

          # Step 3: Set up Python environment
          - name: Install Packages
            run: make install_cml

          # Step 4: Format code
          - name: Format
            if: ${{ success() }}
            run: make format
          
          # Step 5: Run training
          - name: Train
            if: ${{ success() }}
            run: make train

          # Step 6: Run Evaluation
          - name: Evaluation
            if: ${{ success() }}
            env:
              REPO_TOKEN: ${{secrets.GITHUB_TOKEN}}  
            run: make eval



            

